1..84
ok 1 Suite .clone() should copy the title
ok 2 Suite .clone() should copy the timeout value
ok 3 Suite .clone() should copy the slow value
ok 4 Suite .clone() should copy the bail value
ok 5 Suite .clone() should not copy the values from the suites array
ok 6 Suite .clone() should not copy the values from the tests array
ok 7 Suite .clone() should not copy the values from the _beforeEach array
ok 8 Suite .clone() should not copy the values from the _beforeAll array
ok 9 Suite .clone() should not copy the values from the _afterEach array
ok 10 Suite .clone() should not copy the values from the _afterAll array
ok 11 Suite .timeout() when no argument is passed should return the timeout value
ok 12 Suite .timeout() when argument is passed should return the Suite object
ok 13 Suite .slow() when given a string should parse it
ok 14 Suite .slow() when no argument is passed should return the slow value
ok 15 Suite .slow() when argument is passed should return the Suite object
ok 16 Suite .bail() when no argument is passed should return the bail value
ok 17 Suite .bail() when argument is passed should return the Suite object
ok 18 Suite .beforeAll() wraps the passed in function in a Hook adds it to _beforeAll
ok 19 Suite .afterAll() wraps the passed in function in a Hook adds it to _afterAll
ok 20 Suite .beforeEach() wraps the passed in function in a Hook adds it to _beforeEach
ok 21 Suite .afterEach() wraps the passed in function in a Hook adds it to _afterEach
ok 22 Suite .addSuite() sets the parent on the added Suite
ok 23 Suite .addSuite() copies the timeout value
ok 24 Suite .addSuite() copies the slow value
ok 25 Suite .addSuite() adds the suite to the suites collection
ok 26 Suite .fullTitle() when there is no parent returns the suite title
ok 27 Suite .fullTitle() when there is a parent returns the combination of parent's and suite's title
ok 28 Suite .total() when there are no nested suites or tests should return 0
ok 29 Suite .total() when there are several tests in the suite should return the number
ok 30 Suite .eachTest(fn) when there are no nested suites or tests should return 0
ok 31 Suite .eachTest(fn) when there are several tests in the suite should return the number
ok 32 Suite .eachTest(fn) when there are several levels of nested suites should return the number
ok 33 Runner .grep() should update the runner.total with number of matched tests
ok 34 Runner .grep() should update the runner.total with number of matched tests when inverted
ok 35 Runner .grepTotal() should return the total number of matched tests
ok 36 Runner .grepTotal() should return the total number of matched tests when inverted
not ok 37 Runner .globalProps() should include common non enumerable globals
  TypeError: props.should.include is not a function
      at Context.<anonymous> (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/test/runner.js:56:20)
      at Test.Runnable.run (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runnable.js:213:32)
      at Runner.runTest (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:351:10)
      at /Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:397:12
      at next (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:277:14)
      at /Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:286:7
      at next (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:234:23)
      at Immediate._onImmediate (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:254:5)
      at processImmediate [as _immediateCallback] (timers.js:383:17)
ok 38 Runner .globals() should default to the known globals
not ok 39 Runner .globals() should white-list globals
  TypeError: runner.globals(...).should.include is not a function
      at Context.<anonymous> (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/test/runner.js:72:31)
      at Test.Runnable.run (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runnable.js:213:32)
      at Runner.runTest (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:351:10)
      at /Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:397:12
      at next (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:277:14)
      at /Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:286:7
      at next (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:234:23)
      at Immediate._onImmediate (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:254:5)
      at processImmediate [as _immediateCallback] (timers.js:383:17)
ok 40 Runner .checkGlobals(test) should allow variables that match a wildcard
ok 41 Runner .checkGlobals(test) should emit "fail" when a new global is introduced
ok 42 Runner .checkGlobals(test) should not fail when a new common global is introduced
ok 43 Runner .checkGlobals(test) should pluralize the error message when several are introduced
ok 44 Runner .fail(test, err) should increment .failures
ok 45 Runner .fail(test, err) should set test.state to "failed"
ok 46 Runner .fail(test, err) should emit "fail"
ok 47 Runner .failHook(hoot, err) should increment .failures
ok 48 Runner .failHook(hoot, err) should emit "fail"
ok 49 Runner .failHook(hoot, err) should emit "end"
ok 50 Runnable(title, fn) timeout(ms) should set the timeout
ok 51 Runnable(title, fn) slow(ms) should set the slow threshold
ok 52 Runnable(title, fn) .title should be present
ok 53 Runnable(title, fn) when arity >= 1 should be .async
ok 54 Runnable(title, fn) when arity == 0 should be .sync
ok 55 Runnable(title, fn) .run(fn) when .pending should not invoke the callback
not ok 56 Runnable(title, fn) .run(fn) when sync without error should invoke the callback
  TypeError: test.duration.should.be.a is not a function
      at /Users/matt/Documents/classes/cs230/checkable-semver/mocha/test/runnable.js:96:37
      at Runnable.run (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runnable.js:217:5)
      at Context.<anonymous> (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/test/runnable.js:94:16)
      at Test.Runnable.run (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runnable.js:196:15)
      at Runner.runTest (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:351:10)
      at /Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:397:12
      at next (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:277:14)
      at /Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:286:7
      at next (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:234:23)
      at Immediate._onImmediate (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:254:5)
ok 57 Runnable(title, fn) .run(fn) when sync when an exception is thrown should invoke the callback
ok 58 Runnable(title, fn) .run(fn) when async without error should invoke the callback
ok 59 Runnable(title, fn) .run(fn) when async when the callback is invoked several times without an error should emit a single "error" event
ok 60 Runnable(title, fn) .run(fn) when async when the callback is invoked several times with an error should emit a single "error" event
ok 61 Runnable(title, fn) .run(fn) when async when an exception is thrown should invoke the callback
ok 62 Runnable(title, fn) .run(fn) when async when an error is passed should invoke the callback
ok 63 serial hooks one
ok 64 serial hooks two
ok 65 serial hooks three
ok 66 serial nested foo
ok 67 serial nested bar
ok 68 serial nested hooks one
ok 69 serial nested hooks two
ok 70 async hooks one
ok 71 async hooks two
ok 72 async hooks three
ok 73 durations when slow should highlight in red
ok 74 durations when reasonable should highlight in yellow
ok 75 durations when fast should highlight in green
ok 76 fs.readFile() when the file exists should succeed
ok 77 fs.readFile() when the file does not exist should fail
ok 78 global leaks should cause tests to fail
ok 79 global leaks should pass when accepted
ok 80 global leaks should pass with wildcard
ok 81 global leaks should pass when prefixed "mocha-"
ok 82 pending should be allowed # SKIP -
ok 83 timeouts should error on timeout
ok 84 timeouts should allow overriding per-test
# tests 83
# pass 80
# fail 3
done
