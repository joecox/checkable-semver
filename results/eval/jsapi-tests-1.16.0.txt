1..90
ok 1 Suite .clone() should copy the title
ok 2 Suite .clone() should copy the timeout value
ok 3 Suite .clone() should copy the slow value
ok 4 Suite .clone() should copy the bail value
ok 5 Suite .clone() should not copy the values from the suites array
ok 6 Suite .clone() should not copy the values from the tests array
ok 7 Suite .clone() should not copy the values from the _beforeEach array
ok 8 Suite .clone() should not copy the values from the _beforeAll array
ok 9 Suite .clone() should not copy the values from the _afterEach array
ok 10 Suite .clone() should not copy the values from the _afterAll array
ok 11 Suite .timeout() when no argument is passed should return the timeout value
ok 12 Suite .timeout() when argument is passed should return the Suite object
ok 13 Suite .slow() when given a string should parse it
ok 14 Suite .slow() when no argument is passed should return the slow value
ok 15 Suite .slow() when argument is passed should return the Suite object
ok 16 Suite .bail() when no argument is passed should return the bail value
ok 17 Suite .bail() when argument is passed should return the Suite object
ok 18 Suite .beforeAll() wraps the passed in function in a Hook adds it to _beforeAll
ok 19 Suite .afterAll() wraps the passed in function in a Hook adds it to _afterAll
ok 20 Suite .beforeEach() wraps the passed in function in a Hook adds it to _beforeEach
ok 21 Suite .afterEach() wraps the passed in function in a Hook adds it to _afterEach
ok 22 Suite .addSuite() sets the parent on the added Suite
ok 23 Suite .addSuite() copies the timeout value
ok 24 Suite .addSuite() copies the slow value
ok 25 Suite .addSuite() adds the suite to the suites collection
ok 26 Suite .fullTitle() when there is no parent returns the suite title
ok 27 Suite .fullTitle() when there is a parent returns the combination of parent's and suite's title
ok 28 Suite .total() when there are no nested suites or tests should return 0
ok 29 Suite .total() when there are several tests in the suite should return the number
ok 30 Suite .eachTest(fn) when there are no nested suites or tests should return 0
ok 31 Suite .eachTest(fn) when there are several tests in the suite should return the number
ok 32 Suite .eachTest(fn) when there are several levels of nested suites should return the number
ok 33 Runner .grep() should update the runner.total with number of matched tests
ok 34 Runner .grep() should update the runner.total with number of matched tests when inverted
ok 35 Runner .grepTotal() should return the total number of matched tests
ok 36 Runner .grepTotal() should return the total number of matched tests when inverted
not ok 37 Runner .globalProps() should include common non enumerable globals
  TypeError: props.should.include is not a function
      at Context.<anonymous> (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/test/runner.js:56:20)
      at Test.Runnable.run (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runnable.js:221:32)
      at Runner.runTest (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:378:10)
      at /Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:456:12
      at next (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:303:14)
      at /Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:313:7
      at next (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:251:23)
      at Immediate._onImmediate (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:280:5)
      at processImmediate [as _immediateCallback] (timers.js:383:17)
ok 38 Runner .globals() should default to the known globals
not ok 39 Runner .globals() should white-list globals
  TypeError: runner.globals(...).should.include is not a function
      at Context.<anonymous> (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/test/runner.js:72:31)
      at Test.Runnable.run (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runnable.js:221:32)
      at Runner.runTest (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:378:10)
      at /Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:456:12
      at next (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:303:14)
      at /Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:313:7
      at next (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:251:23)
      at Immediate._onImmediate (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:280:5)
      at processImmediate [as _immediateCallback] (timers.js:383:17)
ok 40 Runner .checkGlobals(test) should allow variables that match a wildcard
ok 41 Runner .checkGlobals(test) should emit "fail" when a new global is introduced
ok 42 Runner .checkGlobals(test) should not fail when a new common global is introduced
ok 43 Runner .checkGlobals(test) should pluralize the error message when several are introduced
ok 44 Runner .checkGlobals(test) should respect per test whitelisted globals
ok 45 Runner .checkGlobals(test) should respect per test whitelisted globals but still detect other leaks
ok 46 Runner .fail(test, err) should increment .failures
ok 47 Runner .fail(test, err) should set test.state to "failed"
ok 48 Runner .fail(test, err) should emit "fail"
ok 49 Runner .failHook(hook, err) should increment .failures
ok 50 Runner .failHook(hook, err) should emit "fail"
ok 51 Runner .failHook(hook, err) should emit "end" if suite bail is true
ok 52 Runner .failHook(hook, err) should not emit "end" if suite bail is not true
ok 53 Runnable(title, fn) timeout(ms) should set the timeout
ok 54 Runnable(title, fn) slow(ms) should set the slow threshold
ok 55 Runnable(title, fn) .title should be present
ok 56 Runnable(title, fn) when arity >= 1 should be .async
ok 57 Runnable(title, fn) when arity == 0 should be .sync
ok 58 Runnable(title, fn) globals should allow for whitelisting globals
ok 59 Runnable(title, fn) .run(fn) when .pending should not invoke the callback
ok 60 Runnable(title, fn) .run(fn) when sync without error should invoke the callback
ok 61 Runnable(title, fn) .run(fn) when sync when an exception is thrown should invoke the callback
ok 62 Runnable(title, fn) .run(fn) when async should allow updating the timeout
ok 63 Runnable(title, fn) .run(fn) when async should allow a timeout of 0 # SKIP -
ok 64 Runnable(title, fn) .run(fn) when async without error should invoke the callback
ok 65 Runnable(title, fn) .run(fn) when async when the callback is invoked several times without an error should emit a single "error" event
ok 66 Runnable(title, fn) .run(fn) when async when the callback is invoked several times with an error should emit a single "error" event
ok 67 Runnable(title, fn) .run(fn) when async when an exception is thrown should invoke the callback
ok 68 Runnable(title, fn) .run(fn) when async when an error is passed should invoke the callback
ok 69 serial hooks one
ok 70 serial hooks two
ok 71 serial hooks three
ok 72 serial nested foo
ok 73 serial nested bar
ok 74 serial nested hooks one
ok 75 serial nested hooks two
ok 76 async hooks one
ok 77 async hooks two
ok 78 async hooks three
ok 79 durations when slow should highlight in red
ok 80 durations when reasonable should highlight in yellow
ok 81 durations when fast should highlight in green
ok 82 fs.readFile() when the file exists should succeed
ok 83 fs.readFile() when the file does not exist should fail
ok 84 global leaks should cause tests to fail
ok 85 global leaks should pass when accepted
ok 86 global leaks should pass with wildcard
ok 87 global leaks should pass when prefixed "mocha-"
ok 88 pending should be allowed # SKIP -
ok 89 timeouts should error on timeout
ok 90 timeouts should allow overriding per-test
# tests 88
# pass 86
# fail 2
done
