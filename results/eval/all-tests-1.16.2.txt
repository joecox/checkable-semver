(node) child_process: options.customFds option is deprecated. Use options.stdio instead.
1..4
ok 1 Array indexOf() should return -1 when the value is not present
ok 2 Array indexOf() should return the correct index when the value is present
ok 3 Array pop() should remove and return the last value
ok 4 Array has a length property
# tests 4
# pass 4
# fail 0
(node) child_process: options.customFds option is deprecated. Use options.stdio instead.
1..4
ok 1 Array indexOf() should return -1 when the value is not present
ok 2 Array indexOf() should return the correct index when the value is present
ok 3 Array indexOf() should skip this test # SKIP -
ok 4 Array indexOf() should skip this suite should skip this test # SKIP -
# tests 2
# pass 2
# fail 0
(node) child_process: options.customFds option is deprecated. Use options.stdio instead.
1..3
ok 1 Array length
ok 2 Array indexOf()
ok 3 String length
# tests 3
# pass 3
# fail 0
(node) child_process: options.customFds option is deprecated. Use options.stdio instead.
1..2
ok 1 Array indexOf() should return -1 when the value is not present
ok 2 Array indexOf() should return the correct index when the value is present
# tests 2
# pass 2
# fail 0
(node) child_process: options.customFds option is deprecated. Use options.stdio instead.
1..145
ok 1  should work
ok 2 Context nested should work
ok 3 diffs should display a diff for small strings
ok 4 diffs should display a diff for medium strings
ok 5 diffs should display a diff for entire object dumps
ok 6 diffs should display a diff for multi-line strings
ok 7 diffs should display a diff for entire object dumps
ok 8 diffs should display a full-comparison with escaped special characters
ok 9 diffs should display a word diff for large strings
ok 10 diffs should work with objects
ok 11 durations when slow should highlight in red
ok 12 durations when reasonable should highlight in yellow
ok 13 durations when fast should highlight in green
ok 14 fs.readFile() when the file exists should succeed
ok 15 fs.readFile() when the file does not exist should fail
ok 16 global leaks should cause tests to fail
ok 17 global leaks should pass when accepted
ok 18 global leaks should pass with wildcard
ok 19 global leaks should pass when prefixed "mocha-"
not ok 20 http should provide an example
  TypeError: res.should.have.status is not a function
      at ClientRequest.<anonymous> (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/test/acceptance/http.js:13:23)
      at ClientRequest.g (events.js:273:16)
      at emitOne (events.js:90:13)
      at ClientRequest.emit (events.js:182:7)
      at HTTPParser.parserOnIncomingClient [as onIncoming] (_http_client.js:458:21)
      at HTTPParser.parserOnHeadersComplete (_http_common.js:103:23)
      at Socket.socketOnData (_http_client.js:348:20)
      at emitOne (events.js:90:13)
      at Socket.emit (events.js:182:7)
      at readableAddChunk (_stream_readable.js:153:18)
      at Socket.Readable.push (_stream_readable.js:111:10)
      at TCP.onread (net.js:529:20)
ok 21 multiple calls to done() should fail in a test-case
ok 22 pending should be allowed # SKIP -
ok 23 root should be a valid suite
ok 24 timeouts should error on timeout
ok 25 timeouts should allow overriding per-test
ok 26 uncaught should report properly
ok 27 lib/utils clean should format a single line test function
ok 28 lib/utils clean should format a multi line test indented with spaces
ok 29 lib/utils clean should format a multi line test indented with tabs
ok 30 lib/utils clean should format functions saved in windows style - spaces
ok 31 lib/utils clean should format functions saved in windows style - tabs
ok 32 Mocha "grep" option should add a RegExp to the mocha.options object
ok 33 Mocha "grep" option should convert grep string to a RegExp
ok 34 Mocha .grep() should add a RegExp to the mocha.options object
ok 35 Mocha .grep() should convert grep string to a RegExp
ok 36 Mocha .grep() should return it's parent Mocha object for chainability
ok 37 Mocha "invert" option should add a Boolean to the mocha.options object
ok 38 async hooks one
ok 39 async hooks two
ok 40 async hooks three
ok 41 hook error handling before hook error spec 1 should not be called because of error in before hook
ok 42 hook error handling before hook error spec 1 spec 1 nested should not be called, because hook error was in a parent suite
ok 43 hook error handling before hook error spec 2 should be called, because hook error was in a sibling suite
ok 44 hook error handling before each hook error spec 1 should not be called because of error in before each hook
ok 45 hook error handling before each hook error spec 1 spec 1 nested should not be called, because hook error was in a parent suite
ok 46 hook error handling before each hook error spec 2 should be called, because hook error was in a sibling suite
ok 47 hook error handling after hook error spec 1 should be called because error is in after hook
ok 48 hook error handling after hook error spec 1 spec 1 nested should be called, because hook error will happen after parent suite
ok 49 hook error handling after hook error spec 2 should be called, because hook error was in a sibling suite
ok 50 hook error handling after each hook error spec 1 should be called because error is in after each hook, and this is the first test
ok 51 hook error handling after each hook error spec 1 should not be called because error is in after each hook, and this is the second test
ok 52 hook error handling after each hook error spec 1 spec 1 nested should not be called, because hook error has already happened in parent suite
ok 53 hook error handling after each hook error spec 2 should be called, because hook error was in a sibling suite
ok 54 hook error handling multiple hook errors 1 1.1 1.1 test 1
ok 55 hook error handling multiple hook errors 1 1.1 1.1 test 2
ok 56 hook error handling multiple hook errors 1 1.2 1.2 test 1
ok 57 hook error handling multiple hook errors 1 1.2 1.2 test 2
ok 58 hook error handling multiple hook errors 2 2.1 2.1 test 1
ok 59 hook error handling multiple hook errors 2 2.1 2.1 test 2
ok 60 hook error handling multiple hook errors 2 2.2 2.2 test 1
ok 61 hook error handling multiple hook errors 2 2.2 2.2 test 2
ok 62 serial hooks one
ok 63 serial hooks two
ok 64 serial hooks three
ok 65 serial nested foo
ok 66 serial nested bar
ok 67 serial nested hooks one
ok 68 serial nested hooks two
not ok 69 http server GET / should respond with "hello"
  TypeError: res.should.have.status is not a function
      at ClientRequest.<anonymous> (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/test/http.meta.2.js:32:23)
      at ClientRequest.g (events.js:273:16)
      at emitOne (events.js:90:13)
      at ClientRequest.emit (events.js:182:7)
      at HTTPParser.parserOnIncomingClient [as onIncoming] (_http_client.js:458:21)
      at HTTPParser.parserOnHeadersComplete (_http_common.js:103:23)
      at Socket.socketOnData (_http_client.js:348:20)
      at emitOne (events.js:90:13)
      at Socket.emit (events.js:182:7)
      at readableAddChunk (_stream_readable.js:153:18)
      at Socket.Readable.push (_stream_readable.js:111:10)
      at TCP.onread (net.js:529:20)
not ok 70 http server GET /users should respond with "tobi, loki, jane"
  TypeError: res.should.have.status is not a function
      at ClientRequest.<anonymous> (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/test/http.meta.2.js:32:23)
      at ClientRequest.g (events.js:273:16)
      at emitOne (events.js:90:13)
      at ClientRequest.emit (events.js:182:7)
      at HTTPParser.parserOnIncomingClient [as onIncoming] (_http_client.js:458:21)
      at HTTPParser.parserOnHeadersComplete (_http_common.js:103:23)
      at Socket.socketOnData (_http_client.js:348:20)
      at emitOne (events.js:90:13)
      at Socket.emit (events.js:182:7)
      at readableAddChunk (_stream_readable.js:153:18)
      at Socket.Readable.push (_stream_readable.js:111:10)
      at TCP.onread (net.js:529:20)
not ok 71 http server GET /users when given Accept: application/json should respond with "["tobi","loki","jane"]"
  TypeError: res.should.have.status is not a function
      at ClientRequest.<anonymous> (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/test/http.meta.2.js:32:23)
      at ClientRequest.g (events.js:273:16)
      at emitOne (events.js:90:13)
      at ClientRequest.emit (events.js:182:7)
      at HTTPParser.parserOnIncomingClient [as onIncoming] (_http_client.js:458:21)
      at HTTPParser.parserOnHeadersComplete (_http_common.js:103:23)
      at Socket.socketOnData (_http_client.js:348:20)
      at emitOne (events.js:90:13)
      at Socket.emit (events.js:182:7)
      at readableAddChunk (_stream_readable.js:153:18)
      at Socket.Readable.push (_stream_readable.js:111:10)
      at TCP.onread (net.js:529:20)
not ok 72 http requests GET / should respond with hello
  TypeError: res.should.have.status is not a function
      at ClientRequest.<anonymous> (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/test/http.meta.js:28:23)
      at ClientRequest.g (events.js:273:16)
      at emitOne (events.js:90:13)
      at ClientRequest.emit (events.js:182:7)
      at HTTPParser.parserOnIncomingClient [as onIncoming] (_http_client.js:458:21)
      at HTTPParser.parserOnHeadersComplete (_http_common.js:103:23)
      at Socket.socketOnData (_http_client.js:348:20)
      at emitOne (events.js:90:13)
      at Socket.emit (events.js:182:7)
      at readableAddChunk (_stream_readable.js:153:18)
      at Socket.Readable.push (_stream_readable.js:111:10)
      at TCP.onread (net.js:529:20)
not ok 73 http requests GET /users should respond with users
  TypeError: res.should.have.status is not a function
      at ClientRequest.<anonymous> (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/test/http.meta.js:28:23)
      at ClientRequest.g (events.js:273:16)
      at emitOne (events.js:90:13)
      at ClientRequest.emit (events.js:182:7)
      at HTTPParser.parserOnIncomingClient [as onIncoming] (_http_client.js:458:21)
      at HTTPParser.parserOnHeadersComplete (_http_common.js:103:23)
      at Socket.socketOnData (_http_client.js:348:20)
      at emitOne (events.js:90:13)
      at Socket.emit (events.js:182:7)
      at readableAddChunk (_stream_readable.js:153:18)
      at Socket.Readable.push (_stream_readable.js:111:10)
      at TCP.onread (net.js:529:20)
not ok 74 http requests GET /users should respond with users
  TypeError: res.should.have.status is not a function
      at ClientRequest.<anonymous> (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/test/http.meta.js:28:23)
      at ClientRequest.g (events.js:273:16)
      at emitOne (events.js:90:13)
      at ClientRequest.emit (events.js:182:7)
      at HTTPParser.parserOnIncomingClient [as onIncoming] (_http_client.js:458:21)
      at HTTPParser.parserOnHeadersComplete (_http_common.js:103:23)
      at Socket.socketOnData (_http_client.js:348:20)
      at emitOne (events.js:90:13)
      at Socket.emit (events.js:182:7)
      at readableAddChunk (_stream_readable.js:153:18)
      at Socket.Readable.push (_stream_readable.js:111:10)
      at TCP.onread (net.js:529:20)
ok 75 Runnable(title, fn) timeout(ms) should set the timeout
ok 76 Runnable(title, fn) slow(ms) should set the slow threshold
ok 77 Runnable(title, fn) .title should be present
ok 78 Runnable(title, fn) when arity >= 1 should be .async
ok 79 Runnable(title, fn) when arity == 0 should be .sync
ok 80 Runnable(title, fn) globals should allow for whitelisting globals
ok 81 Runnable(title, fn) .run(fn) when .pending should not invoke the callback
ok 82 Runnable(title, fn) .run(fn) when sync without error should invoke the callback
ok 83 Runnable(title, fn) .run(fn) when sync when an exception is thrown should invoke the callback
ok 84 Runnable(title, fn) .run(fn) when async should allow updating the timeout
ok 85 Runnable(title, fn) .run(fn) when async should allow a timeout of 0 # SKIP -
ok 86 Runnable(title, fn) .run(fn) when async without error should invoke the callback
ok 87 Runnable(title, fn) .run(fn) when async when the callback is invoked several times without an error should emit a single "error" event
ok 88 Runnable(title, fn) .run(fn) when async when the callback is invoked several times with an error should emit a single "error" event
ok 89 Runnable(title, fn) .run(fn) when async when an exception is thrown should invoke the callback
ok 90 Runnable(title, fn) .run(fn) when async when an error is passed should invoke the callback
ok 91 Runner .grep() should update the runner.total with number of matched tests
ok 92 Runner .grep() should update the runner.total with number of matched tests when inverted
ok 93 Runner .grepTotal() should return the total number of matched tests
ok 94 Runner .grepTotal() should return the total number of matched tests when inverted
not ok 95 Runner .globalProps() should include common non enumerable globals
  TypeError: props.should.include is not a function
      at Context.<anonymous> (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/test/runner.js:56:20)
      at Test.Runnable.run (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runnable.js:221:32)
      at Runner.runTest (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:378:10)
      at /Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:456:12
      at next (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:303:14)
      at /Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:313:7
      at next (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:251:23)
      at Immediate._onImmediate (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:280:5)
      at processImmediate [as _immediateCallback] (timers.js:383:17)
ok 96 Runner .globals() should default to the known globals
not ok 97 Runner .globals() should white-list globals
  TypeError: runner.globals(...).should.include is not a function
      at Context.<anonymous> (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/test/runner.js:72:31)
      at Test.Runnable.run (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runnable.js:221:32)
      at Runner.runTest (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:378:10)
      at /Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:456:12
      at next (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:303:14)
      at /Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:313:7
      at next (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:251:23)
      at Immediate._onImmediate (/Users/matt/Documents/classes/cs230/checkable-semver/mocha/lib/runner.js:280:5)
      at processImmediate [as _immediateCallback] (timers.js:383:17)
ok 98 Runner .checkGlobals(test) should allow variables that match a wildcard
ok 99 Runner .checkGlobals(test) should emit "fail" when a new global is introduced
ok 100 Runner .checkGlobals(test) should not fail when a new common global is introduced
ok 101 Runner .checkGlobals(test) should pluralize the error message when several are introduced
ok 102 Runner .checkGlobals(test) should respect per test whitelisted globals
ok 103 Runner .checkGlobals(test) should respect per test whitelisted globals but still detect other leaks
ok 104 Runner .fail(test, err) should increment .failures
ok 105 Runner .fail(test, err) should set test.state to "failed"
ok 106 Runner .fail(test, err) should emit "fail"
ok 107 Runner .failHook(hook, err) should increment .failures
ok 108 Runner .failHook(hook, err) should emit "fail"
ok 109 Runner .failHook(hook, err) should emit "end" if suite bail is true
ok 110 Runner .failHook(hook, err) should not emit "end" if suite bail is not true
ok 111 Suite .clone() should copy the title
ok 112 Suite .clone() should copy the timeout value
ok 113 Suite .clone() should copy the slow value
ok 114 Suite .clone() should copy the bail value
ok 115 Suite .clone() should not copy the values from the suites array
ok 116 Suite .clone() should not copy the values from the tests array
ok 117 Suite .clone() should not copy the values from the _beforeEach array
ok 118 Suite .clone() should not copy the values from the _beforeAll array
ok 119 Suite .clone() should not copy the values from the _afterEach array
ok 120 Suite .clone() should not copy the values from the _afterAll array
ok 121 Suite .timeout() when no argument is passed should return the timeout value
ok 122 Suite .timeout() when argument is passed should return the Suite object
ok 123 Suite .slow() when given a string should parse it
ok 124 Suite .slow() when no argument is passed should return the slow value
ok 125 Suite .slow() when argument is passed should return the Suite object
ok 126 Suite .bail() when no argument is passed should return the bail value
ok 127 Suite .bail() when argument is passed should return the Suite object
ok 128 Suite .beforeAll() wraps the passed in function in a Hook adds it to _beforeAll
ok 129 Suite .afterAll() wraps the passed in function in a Hook adds it to _afterAll
ok 130 Suite .beforeEach() wraps the passed in function in a Hook adds it to _beforeEach
ok 131 Suite .afterEach() wraps the passed in function in a Hook adds it to _afterEach
ok 132 Suite .addSuite() sets the parent on the added Suite
ok 133 Suite .addSuite() copies the timeout value
ok 134 Suite .addSuite() copies the slow value
ok 135 Suite .addSuite() adds the suite to the suites collection
ok 136 Suite .fullTitle() when there is no parent returns the suite title
ok 137 Suite .fullTitle() when there is a parent returns the combination of parent's and suite's title
ok 138 Suite .total() when there are no nested suites or tests should return 0
ok 139 Suite .total() when there are several tests in the suite should return the number
ok 140 Suite .eachTest(fn) when there are no nested suites or tests should return 0
ok 141 Suite .eachTest(fn) when there are several tests in the suite should return the number
ok 142 Suite .eachTest(fn) when there are several levels of nested suites should return the number
ok 143 utils .clean() should remove the wrapping function declaration
ok 144 utils .clean() should remove space character indentation from the function body
ok 145 utils .clean() should remove tab character indentation from the function body
# tests 143
# pass 134
# fail 9
make: *** [test-unit] Error 9
